exports_files(["nixpkgs.nix"])

load(
    "@rules_haskell//haskell:defs.bzl",
    "ghc_plugin",
    "haskell_library",
)

cc_library(
    name = "bctable",
    hdrs = ["cbits/bctable.h"],
    srcs = ["cbits/bctable.c"],
    strip_include_prefix = "cbits",
)

haskell_library(
    name = "inline-java",
    # cbits/bctable.h is included here so it can be found by Plugin.hs
    # at the same location when building with bazel as with stack.
    srcs = glob(['src/common/**/*.hs',
                 'src/common/**/*.hsc',
                 'src/linear-types/**/*.hs',
                 'src/ghc-8.11/**/*.hs',
                 'cbits/bctable.h',
                 ]),
    visibility = ["//visibility:public"],
    deps = [
        "//jni",
        "//jvm",
        ":bctable",
        "@stackage//:Cabal",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:directory",
        "@stackage//:filemanip",
        "@stackage//:filepath",
        "@stackage//:ghc",
        "@stackage//:language-java",
        "@stackage//:linear-base",
        "@stackage//:mtl",
        "@stackage//:process",
        "@stackage//:template-haskell",
        "@stackage//:temporary",
        "@stackage//:text",
    ],
)

ghc_plugin(
    name = "inline-java-plugin",
    args = ["$(JAVABASE)/bin/javac"],
    module = "Language.Java.Inline.Plugin",
    toolchains = ["@bazel_tools//tools/jdk:current_java_runtime"],
    tools = ["@bazel_tools//tools/jdk:current_java_runtime"],
    visibility = ["//visibility:public"],
    deps = [":inline-java"],
)
